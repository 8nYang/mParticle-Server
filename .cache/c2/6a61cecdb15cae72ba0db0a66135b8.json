{"id":"app.js","dependencies":[{"name":"/Users/hsyang/Downloads/eCommerce - webApp/mP-Media/package.json","includedInParent":true,"mtime":1659653552020}],"generated":{"js":"const https = require('https');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst options = {\r\n  key: fs.readFileSync('/usr/local/etc/nginx/key.pem'),\r\n  cert: fs.readFileSync('/usr/local/etc/nginx/cert.pem')\r\n};\r\n\r\n\r\nconst mimeTypes = {\r\n  '.html': 'text/html',\r\n  '.js': 'text/javascript',\r\n  '.css': 'text/css',\r\n  '.json': 'application/json',\r\n  '.png': 'image/png',\r\n  '.jpg': 'image/jpg',\r\n  '.gif': 'image/gif',\r\n  '.wav': 'audio/wav',\r\n  '.mp4': 'video/mp4',\r\n  '.woff': 'application/font-woff',\r\n  '.ttf': 'application/font-ttf',\r\n  '.eot': 'application/vnd.ms-fontobject',\r\n  '.otf': 'application/font-otf',\r\n  '.svg': 'application/image/svg+xml',\r\n};\r\n\r\nconst app = https.createServer(options, function (request, response) {\r\n  let filePath = path.join(__dirname, 'public', request.url);\r\n  if (filePath === path.join(__dirname, 'public', '/')) filePath = path.join(__dirname, 'public', 'index.html');\r\n\r\n  const extname = String(path.extname(filePath)).toLowerCase();\r\n  const contentType = mimeTypes[extname] || 'application/octet-stream';\r\n\r\n  fs.readFile(filePath, (error, content) => {\r\n    if (error) {\r\n      response.writeHead(500);\r\n      response.end(`Sorry, check with the site admin for error: ${error.code} ..\\n`);\r\n      response.end();\r\n    } else {\r\n      response.writeHead(200, { 'Content-Type': contentType });\r\n      response.end(content, 'utf-8');\r\n    }\r\n  });\r\n}).listen(443);\r\n\r\nmodule.exports = app;"},"sourceMaps":{"js":{"mappings":[{"source":"app.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"app.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"app.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"app.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"app.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"app.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"app.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"app.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"app.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"app.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"app.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"app.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"app.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"app.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"app.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"app.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"app.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"app.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"app.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"app.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"app.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"app.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"app.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"app.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"app.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"app.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"app.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"app.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"app.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"app.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"app.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"app.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"app.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"app.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"app.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"app.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"app.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"app.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"app.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"app.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"app.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"app.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"app.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"app.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"app.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"app.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"app.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"app.js":"const https = require('https');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst options = {\r\n  key: fs.readFileSync('/usr/local/etc/nginx/key.pem'),\r\n  cert: fs.readFileSync('/usr/local/etc/nginx/cert.pem')\r\n};\r\n\r\n\r\nconst mimeTypes = {\r\n  '.html': 'text/html',\r\n  '.js': 'text/javascript',\r\n  '.css': 'text/css',\r\n  '.json': 'application/json',\r\n  '.png': 'image/png',\r\n  '.jpg': 'image/jpg',\r\n  '.gif': 'image/gif',\r\n  '.wav': 'audio/wav',\r\n  '.mp4': 'video/mp4',\r\n  '.woff': 'application/font-woff',\r\n  '.ttf': 'application/font-ttf',\r\n  '.eot': 'application/vnd.ms-fontobject',\r\n  '.otf': 'application/font-otf',\r\n  '.svg': 'application/image/svg+xml',\r\n};\r\n\r\nconst app = https.createServer(options, function (request, response) {\r\n  let filePath = path.join(__dirname, 'public', request.url);\r\n  if (filePath === path.join(__dirname, 'public', '/')) filePath = path.join(__dirname, 'public', 'index.html');\r\n\r\n  const extname = String(path.extname(filePath)).toLowerCase();\r\n  const contentType = mimeTypes[extname] || 'application/octet-stream';\r\n\r\n  fs.readFile(filePath, (error, content) => {\r\n    if (error) {\r\n      response.writeHead(500);\r\n      response.end(`Sorry, check with the site admin for error: ${error.code} ..\\n`);\r\n      response.end();\r\n    } else {\r\n      response.writeHead(200, { 'Content-Type': contentType });\r\n      response.end(content, 'utf-8');\r\n    }\r\n  });\r\n}).listen(443);\r\n\r\nmodule.exports = app;"},"lineCount":47}},"error":null,"hash":"338744fbfce8cc8d47cfdcdb9fc949e5","cacheData":{"env":{}}}